// automatically generated by the FlatBuffers compiler, do not modify

package poker.io.codec.protocol;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class PROC_Login extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static PROC_Login getRootAsPROC_Login(ByteBuffer _bb) { return getRootAsPROC_Login(_bb, new PROC_Login()); }
  public static PROC_Login getRootAsPROC_Login(ByteBuffer _bb, PROC_Login obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public PROC_Login __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public PROC_User user() { return user(new PROC_User()); }
  public PROC_User user(PROC_User obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createPROC_Login(FlatBufferBuilder builder,
      int userOffset) {
    builder.startTable(1);
    PROC_Login.addUser(builder, userOffset);
    return PROC_Login.endPROC_Login(builder);
  }

  public static void startPROC_Login(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addUser(FlatBufferBuilder builder, int userOffset) { builder.addOffset(0, userOffset, 0); }
  public static int endPROC_Login(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public PROC_Login get(int j) { return get(new PROC_Login(), j); }
    public PROC_Login get(PROC_Login obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

