// automatically generated by the FlatBuffers compiler, do not modify

package poker.io.codec.protocol;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class PROC_Room_Enter extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static PROC_Room_Enter getRootAsPROC_Room_Enter(ByteBuffer _bb) { return getRootAsPROC_Room_Enter(_bb, new PROC_Room_Enter()); }
  public static PROC_Room_Enter getRootAsPROC_Room_Enter(ByteBuffer _bb, PROC_Room_Enter obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public PROC_Room_Enter __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public PROC_User enterUser() { return enterUser(new PROC_User()); }
  public PROC_User enterUser(PROC_User obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public PROC_Room room() { return room(new PROC_Room()); }
  public PROC_Room room(PROC_Room obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createPROC_Room_Enter(FlatBufferBuilder builder,
      int enterUserOffset,
      int roomOffset) {
    builder.startTable(2);
    PROC_Room_Enter.addRoom(builder, roomOffset);
    PROC_Room_Enter.addEnterUser(builder, enterUserOffset);
    return PROC_Room_Enter.endPROC_Room_Enter(builder);
  }

  public static void startPROC_Room_Enter(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addEnterUser(FlatBufferBuilder builder, int enterUserOffset) { builder.addOffset(0, enterUserOffset, 0); }
  public static void addRoom(FlatBufferBuilder builder, int roomOffset) { builder.addOffset(1, roomOffset, 0); }
  public static int endPROC_Room_Enter(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public PROC_Room_Enter get(int j) { return get(new PROC_Room_Enter(), j); }
    public PROC_Room_Enter get(PROC_Room_Enter obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

