// automatically generated by the FlatBuffers compiler, do not modify

package poker.io.codec.protocol;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class PROC_MENU_ITEM extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static PROC_MENU_ITEM getRootAsPROC_MENU_ITEM(ByteBuffer _bb) { return getRootAsPROC_MENU_ITEM(_bb, new PROC_MENU_ITEM()); }
  public static PROC_MENU_ITEM getRootAsPROC_MENU_ITEM(ByteBuffer _bb, PROC_MENU_ITEM obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public PROC_MENU_ITEM __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte type() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public boolean mutateType(byte type) { int o = __offset(4); if (o != 0) { bb.put(o + bb_pos, type); return true; } else { return false; } }
  public String coin() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer coinAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer coinInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }

  public static int createPROC_MENU_ITEM(FlatBufferBuilder builder,
      byte type,
      int coinOffset) {
    builder.startTable(2);
    PROC_MENU_ITEM.addCoin(builder, coinOffset);
    PROC_MENU_ITEM.addType(builder, type);
    return PROC_MENU_ITEM.endPROC_MENU_ITEM(builder);
  }

  public static void startPROC_MENU_ITEM(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addType(FlatBufferBuilder builder, byte type) { builder.addByte(0, type, 0); }
  public static void addCoin(FlatBufferBuilder builder, int coinOffset) { builder.addOffset(1, coinOffset, 0); }
  public static int endPROC_MENU_ITEM(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public PROC_MENU_ITEM get(int j) { return get(new PROC_MENU_ITEM(), j); }
    public PROC_MENU_ITEM get(PROC_MENU_ITEM obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

