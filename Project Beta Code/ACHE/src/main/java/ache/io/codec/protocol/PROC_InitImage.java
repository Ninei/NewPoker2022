// automatically generated by the FlatBuffers compiler, do not modify

package ache.io.codec.protocol;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class PROC_InitImage extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static PROC_InitImage getRootAsPROC_InitImage(ByteBuffer _bb) { return getRootAsPROC_InitImage(_bb, new PROC_InitImage()); }
  public static PROC_InitImage getRootAsPROC_InitImage(ByteBuffer _bb, PROC_InitImage obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public PROC_InitImage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public PROC_Image initImg() { return initImg(new PROC_Image()); }
  public PROC_Image initImg(PROC_Image obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createPROC_InitImage(FlatBufferBuilder builder,
      int initImgOffset) {
    builder.startTable(1);
    PROC_InitImage.addInitImg(builder, initImgOffset);
    return PROC_InitImage.endPROC_InitImage(builder);
  }

  public static void startPROC_InitImage(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addInitImg(FlatBufferBuilder builder, int initImgOffset) { builder.addOffset(0, initImgOffset, 0); }
  public static int endPROC_InitImage(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public PROC_InitImage get(int j) { return get(new PROC_InitImage(), j); }
    public PROC_InitImage get(PROC_InitImage obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

